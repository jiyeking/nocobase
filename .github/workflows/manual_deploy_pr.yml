name: manual_deploy_pr
on:
  workflow_dispatch:
    inputs:
      deploy_pr_type:
        description: 'decision image name '
        required: true
        default: 'feat' 
        type: choice
        options:
          - feat
          - bug

env:
  registry: registry.cn-hongkong.aliyuncs.com
  registry_name_space: yongfeili
  repo_name: nocobase
  docker_compose_file: ./docker/nocobase-full/mysql-docker-compose.yml
  
jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to ali Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.registry }}/
          username: ${{ secrets.ALI_REGISTRY_NAME }}
          password: ${{ secrets.ALI_REGISTRY_PWD }}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.registry }}/${{ env.registry_name_space }}/${{ env.repo_name }}:${{ inputs.deploy_pr_type }}-${{ github.sha }}
          cache-from: type=registry,ref=${{ env.registry }}/${{ env.registry_name_space }}/${{ env.repo_name }}:buildcache
          cache-to: type=registry,ref=${{ env.registry }}/${{ env.registry_name_space }}/${{ env.repo_name }}:buildcache,mode=max
    
      - 
        name: copy deploy file via ssh password
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_HOST_USERNAME }}
          password: ${{ secrets.DEPLOY_HOST_PASSWORD }}
          source: ${{ env.docker_compose_file }}
          target: "/deploy"
      - 
        name: ssh deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_HOST_USERNAME }}
          password: ${{ secrets.DEPLOY_HOST_PASSWORD }}
          script: |
            docker login --username=${{ secrets.ALI_REGISTRY_NAME }} --password=${{ secrets.ALI_REGISTRY_PWD }} ${{ env.registry }}
            docker pull ${{ env.registry }}/${{ env.registry_name_space }}/${{ env.repo_name }}:${{ inputs.deploy_pr_type }}-${{ github.sha }}
            export IMAGETAG=${{ env.registry }}/${{ env.registry_name_space }}/${{ env.repo_name }}:${{ inputs.deploy_pr_type }}-${{ github.sha }}
            cd /deploy
            docker-compose -f ${{ env.docker_compose_file }} up -d
        
