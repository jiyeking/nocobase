name: publish to npm and dockerhub

on:
  push:
  
env:
  registry: docker.io
  registry_name_space: yongfeili
  repo_name: nocobase
  
jobs:
  test:
    strategy:
      matrix:
        node_version: ['14']

    runs-on: ubuntu-latest
    container: node:${{ matrix.node_version }}
    services:
      verdaccio:
        image: verdaccio/verdaccio
        ports:
          - 4873:4873
        
    steps:
      - uses: actions/checkout@v3
      - name: yarn install and build
        run: |
          yarn config set registry https://registry.npmjs.org/
          yarn install
          yarn build
      - name: install expect
        run: |
          apt-get update 
          apt-get -y install expect
      - name: adduser and login test npm registry
        run: |
          set timeout 10
          spawn npm adduser --registry http://verdaccio:4873
          expect "Username:"
          send "test\n"
          expect "Password:"
          send "123456\n"
          expect "Email: (this IS public)"
          send "test@mail.com\n"
          spawn npm login --registry http://verdaccio:4873
          expect "Username:"
          send "test\n"
          expect "Password:"
          send "123456\n"
          expect "Email: (this IS public)"
          send "test@mail.com\n"
        shell: expect {0}
      - name: publish new version to test npm registry
        id: publish_version
        run: | 
          echo '::echo::on'
          chmod +x ./action_publish_new_version_with_test.sh
          ./action_publish_new_version_with_test.sh
          version_info_line=$(npm view '@nocobase/server')
          version=$(echo $version_info_line |awk '{print $1}' |awk -F '@' '{print $3}' |sed -r "s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g")
          echo $version
          echo "version=$version" >> $GITHUB_ENV
          echo "test_flag is $test_flag"
          echo "test_flag=$test_flag" >> $GITHUB_ENV
        shell: bash {0}
      - name: set output
        id: set_out
        run: |
          echo "this env.version : ${{ env.version }}"
          echo '::set-output name=version::${{ env.version }}'
          echo "this env.test_flag : ${{ env.test_flag }}"
          echo '::set-output name=test_flag::${{ env.test_flag }}'
      - name: publish npmjs.org
        if: (${{ env.test_flag }} == 'success')
        run: | 
          npm config set //registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}
          yarn release:force --registry https://registry.npmjs.org
    outputs:
      output_version: ${{ steps.set_out.outputs.version }}
      output_test_flag: ${{ steps.set_out.outputs.test_flag }}

  publish-dockerhub:
    needs: test
    if: (${{ needs.test.outputs.output_test_flag }} == 'success')
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3 
      - name: publish docker hub
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: ${{ env.registry_name_space }}/${{ env.repo_name }}
          tags: ${{ needs.test.outputs.output_version }}, latest
          registry: ${{ env.registry }}
          dockerfile: ./docker/nocobase/Dockerfile
          directory: ./docker/nocobase/
          username: ${{ env.registry_name_space }}
          password: ${{ secrets.DOCKERHUB_YONGFEILI }} 

          
      

